---
title: Creating an Asteroid app
layout: documentation
---

<p>The app creation process of AsteroidOS needs a Software Development Kit generated by OpenEmbedded. You can either grab a prebuilt SDK <a href="https://release.asteroidos.org/sdk/"><s>here</s></a>(currently broken) and install it on your system or you can build it yourself as follow.</p>
<div class="page-header">
  <h1 id="crosscompiletoolchain">Building the Cross Compilation Toolchain</h1>
</div>
<p>If you’ve already got an OpenEmbedded build directory via the ‘Building AsteroidOS’ page, cd to that directory. Else, create one with:</p>
<pre><code>git clone https://github.com/AsteroidOS/asteroid
cd asteroid/
</code></pre>
<p>Then, build the cross compilation toolchain with:</p>
<pre><code>. ./prepare-build.sh dory
bitbake meta-toolchain-qt5
</code></pre>
<div class="page-header">
  <h1 id="installsdk">Install the SDK</h1>
</div>
<p>If you downloaded a prebuilt SDK, run the downloaded script. If you followed the previous steps, this will have generated the same installation script in <em>tmp-glibc/deploy/sdk/</em>, you can run it as follow:</p>
<pre><code>./tmp-glibc/deploy/sdk/oecore-x86_64-armv7ve-neon-toolchain-nodistro.0.sh
</code></pre>
<p>This script will install the cross compiler and ARM libraries in <em>/usr/local/oecore-x86_64</em> by default, along with a script that needs to be sourced before every build. If you want to build a simple project via the terminal, this can be done like that:</p>
<pre><code>source /usr/local/oecore-x86_64/environment-setup-armv7ve-neon-oe-linux-gnueabi
qmake
make
</code></pre>
<div class="page-header">
  <h1 id="configqtcreator">Configure QtCreator for cross compilation</h1>
</div>
<p>Before running QtCreator you must run the previously mentioned script:</p>
<pre><code>source /usr/local/oecore-x86_64/environment-setup-armv7ve-neon-oe-linux-gnueabi
qtcreator
</code></pre>
<p>This can be done automatically by prepending “source /usr/local/oecore-x86_64/environment-setup-armv7ve-neon-oe-linux-gnueabi” before #!/bin/sh in <em>/usr/bin/qtcreator.sh</em></p>
<p>Now that you are in QtCreator go to ‘<em>Tools-&gt;Options-&gt;Build &amp; Run</em>‘ and</p>
<ul>
<li>In the Compilers tab add the following g++: <em>/usr/local/oecore-x86_64/sysroots/x86_64-oesdk-linux/usr/bin/arm-oe-linux-gnueabi/arm-oe-linux-gnueabi-g++</em></li>
<li>In the Qt Versions tab add the following qmake: <em>/usr/local/oecore-x86_64/sysroots/x86_64-oesdk-linux/usr/bin/qt5/qmake</em></li>
<li>In the Kits tab add a kit with the previously chosen Qt5 version and compiler, set the sysroot to <em>/usr/local/oecore-x86_64/sysroots/armv7a-vfp-neon-oe-linux-gnueabi/</em> and let the other variables empty.</li>
</ul>
<p><strong>TODO:</strong> try to setup ‘<em>Tools-&gt;Options-&gt;Devices</em>‘ for automatic app installation over SSH.</p>
<div class="page-header">
  <h1 id="firstapp">First app</h1>
</div>
<p>Asteroid-Stopwatch can act as a cool QML demo app available to make the first step into AsteroidOS development easier. You can clone it, build it, install it and then modify it to follow your needs:</p>
<pre><code>git clone https://github.com/AsteroidOS/asteroid-stopwatch
cd asteroid-stopwatch/
source /usr/local/oecore-x86_64/environment-setup-armv7ve-neon-oe-linux-gnueabi
qmake
make
scp asteroid-stopwatch root@192.168.2.15:/usr/bin/
scp asteroid-stopwatch.desktop root@192.168.2.15:/usr/share/applications/
</code></pre>
<p>If it wasn’t already installed, a new icon should have already appeared on asteroid-launcher, try to run it and you should get a QtQuick Controls Calendar component.</p>
<p>You can start by modifying occurrences of “asteroid-calendar” to your app’s name. Then you can change the *.desktop file which describes the icon on the apps launcher. Then modify main.qml to describe your UI. To get started with QML development you can read the <a href="http://doc.qt.io/qt-5/qml-tutorial.html">official tutorial</a>.</p>
<div class="page-header">
  <h1 id="tipsandtricks">Tips and tricks</h1>
</div>
<p>If you want to start your app from the command line, open a shell with <a href="{{rel 'wiki/ssh'}}">SSH</a>, connect to ceres and use invoker:</p>
<pre><code>invoker --type=qtcomponents-qt5 /usr/bin/asteroid-stopwatch</code></pre>
<p>If you want to disable screen locking for easier development you can enable the demo mode of mce as root with:</p>
<pre><code>mcetool -D on</code></pre>
